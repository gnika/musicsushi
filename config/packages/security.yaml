security:

    role_hierarchy:
            ROLE_USER:        ROLE_GUEST
            ROLE_ADMIN:       ROLE_USER
            ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    encoders:
        App\Entity\Users:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Users
                property: email
    firewalls:

#        api:
#            pattern: ^/api/
#            guard:
#                authenticators:
#                    - App\Security\TokenAuthenticator
#        default:
#                anonymous: ~
#                guard:
#                    authenticators:
#                        - App\Security\AppAuthenticator


        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
                    - App\Security\AppAuthenticator
                entry_point: App\Security\AppAuthenticator
            logout:
                path:   app_logout
                target: app_default
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: ROLE_API_USER }
        # - { path: ^/profile, roles: ROLE_USER }
